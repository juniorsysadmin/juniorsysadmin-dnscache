# This file has been generated by puppet
#
# Maximum number of bytes that could be allocated if required.
#
DATALIMIT=<%= @dnscache::datalimit %>

# No of bytes to allocate for the cache. This may not exceed DATALIMIT
#
CACHESIZE=<%= @dnscache::cachesize %>

# Address to listen on for incoming connections.
#
IP=<%= @dnscache::listen_ip %>

# Address to use while sending out-going requests. 0.0.0.0 means machines
# primary IP address.
#
IPSEND=<%= @dnscache::ip_send %>

# A non-root user whose privileges should be acquired by dnscache.
# Default: daemon
# See: $ id -u daemon
#
UID=<%= @dnscache::uid %>

# A non-root group whose privileges should be acquired by dnscache.
# Default: daemon
# See: $ id -g daemon
#
GID=<%= @dnscache::gid %>

# ROOT: is the new root & working directory for dnscache.
# Obviously, the user whose ID is mentioned above MUST be able to read from
# this directory.
#
# Also, this is where `ip/' and `servers/' directories should reside.
#
ROOT=<%= @dnscache::dnscache_root %>

# If HIDETTL is set, dnscache uses a TTL of 0 in its responses.
#
HIDETTL=<%= @dnscache::hidettl %>

# If FORWARDONLY is set, dnscache treats the servers/roots as a list of IP
# addresses for other caches, not root servers. It forwards queries to those
# caches the same way a client does, rather than contacting a chain of servers
# according to NS records.
#
FORWARDONLY=<%= @dnscache::forwardonly %>

# If MERGEQUERIES is set, dnscache would merge identical outgoing requests
# into a single query and buffer requesting clients into local queue.
# When response is received for the single query, the same is served to all
# requesting clients.
#
MERGEQUERIES=<%= @dnscache::mergequeries %>

# If DEBUG_LEVEL is set, dnscache displays helpful debug messages to
# the console.
#
DEBUG_LEVEL=<%= @dnscache::debug_level %>
